MetaOpResult __fastcall T3Texture::MetaOperation_SerializeAsync(void *pObj, MetaClassDescription *pObjDescription, MetaMemberDescription *pContextDescription, void *pUserData)
{
  void *v4; // rdi@1
  MetaMemberDescription *v5; // rsi@1
  MetaClassDescription *v6; // rbx@1
  void *v7; // r13@1
  MetaOpResult result; // eax@3
  int v9; // eax@5
  int v10; // esi@6
  int v11; // ebx@11
  GFXPlatformContext *v12; // rax@19
  int v13; // ecx@21
  int v14; // esi@21
  int v15; // er8@24
  __int64 v16; // r8@28
  __int64 v17; // rdx@29
  __int64 v18; // rcx@30
  __int64 v19; // rax@30
  int v20; // esi@33
  __int64 v21; // r14@34
  __int64 v22; // rbx@35
  int v23; // er15@41
  void *v24; // rax@42
  void *v25; // rsi@42
  int v26; // eax@45
  signed int i; // ebx@46
  MetaOpResult (__cdecl *v28)(void *, MetaClassDescription *, MetaMemberDescription *, void *); // rax@53
  T3Texture_DX11 *v29; // rcx@56
  FunctionBase *v30; // rax@56
  __int64 v31; // rsi@63
  DataStream **v32; // rax@64
  DataStream *v33; // rbx@64
  DataStream *v34; // rcx@66
  DataStream *v35; // rcx@68
  __int64 v36; // rax@72
  int v37; // er12@72
  __int64 v38; // rcx@72
  bool v39; // zf@72
  bool v40; // sf@72
  __int64 v41; // rbx@72
  signed __int64 v42; // rax@73
  int v43; // er15@75
  signed __int64 v44; // r13@76
  DataStream *v45; // rax@76
  signed __int64 v46; // rbx@78
  __int64 v47; // r14@78
  MetaClassDescription *v48; // rax@79
  MetaClassDescription *v49; // rsi@79
  MetaOpResult (__cdecl *v50)(void *, MetaClassDescription *, MetaMemberDescription *, void *); // rax@79
  __int64 v51; // rbx@87
  int v52; // eax@88
  signed int j; // esi@89
  MetaOpResult (__cdecl *v54)(void *, MetaClassDescription *, MetaMemberDescription *, void *); // rax@96
  int v55; // er15@102
  __int64 v56; // r14@102
  T3Texture_DX11 *v57; // rax@103
  signed __int64 v58; // rcx@103
  int v59; // esi@104
  T3Texture_DX11 *v60; // rbx@105
  char *v61; // r9@106
  int v62; // er13@106
  unsigned int v63; // ecx@106
  int v64; // ecx@106
  int v65; // er15@109
  char *v66; // r14@109
  int v67; // esi@112
  int v68; // ecx@112
  int v69; // eax@113
  int v70; // ebx@114
  __int64 v71; // rax@130
  int v72; // er15@130
  signed __int64 v73; // r13@131
  signed __int64 v74; // r12@131
  signed __int64 v75; // rbx@133
  MetaClassDescription *v76; // rax@134
  MetaClassDescription *v77; // rsi@134
  MetaOpResult (__cdecl *v78)(void *, MetaClassDescription *, MetaMemberDescription *, void *); // rax@134
  int v79; // [sp+20h] [bp-A8h]@11
  T3Texture::StreamHeader pObja; // [sp+28h] [bp-A0h]@12
  DataStream *v81; // [sp+38h] [bp-90h]@64
  int v82; // [sp+40h] [bp-88h]@102
  T3Texture::StreamHeader v83; // [sp+48h] [bp-80h]@72
  T3Texture_DX11 *v84; // [sp+58h] [bp-70h]@1
  __int64 v85; // [sp+60h] [bp-68h]@42
  T3TextureBase::LockParams params; // [sp+68h] [bp-60h]@72
  T3TextureBase::LockContext context; // [sp+88h] [bp-40h]@106
  __m128i v88; // [sp+D8h] [bp+10h]@111
  __int64 v89; // [sp+E8h] [bp+20h]@1
  __int128 v90; // [sp+F8h] [bp+30h]@111

  v89 = -2i64;
  v4 = pUserData;
  v5 = pContextDescription;
  v6 = pObjDescription;
  v7 = pObj;
  v84 = pObj;
  if ( *(pUserData + 12) == 2 )
  {
    T3Texture::LoadFullTexture(pObj);
    *(v7 + 89) = 9;
	
    if ( *(v7 + 31) < *(v7 + 24) )
      return 2;
  }
  
  result = Meta::MetaOperation_SerializeAsync(v7, v6, v5, v4);
  
  if ( result == 1 )
  {
    v9 = *(v7 + 25);
    
	if ( v9 == 4 )
    {
      v10 = 6 * *(v7 + 23);
    }
    else if ( v9 == 3 )
    {
      v10 = *(v7 + 23);
    }
    else
    {
      v10 = 1;
      if ( v9 == 1 )
        v10 = 6;
    }
    
	v79 = v10;
    v11 = v10 * *(v7 + 24);
    
	if ( *(v4 + 12) == 1 )
    {
      *&pObja.mRegionCount = 0i64;
      pObja.mTotalDataSize = 0;
      PerformMetaSerializeAsync<T3Texture::StreamHeader>(v4, &pObja);
      *(v7 + 180) = *(v4 + 46);
      
	  switch ( *(v7 + 103) )
      {
        case 0xF:
          T3TextureBase::SetGFXAllocationType(v7, eGFXPlatformAllocation_DiffuseTexture);
          break;
        case 2:
        case 3:
        case 0x14:
        case 0x16:
          T3TextureBase::SetGFXAllocationType(v7, eGFXPlatformAllocation_NormalmapTexture);
          break;
        case 8:
        case 0xB:
        case 0x1D:
        case 0x1E:
          T3TextureBase::SetGFXAllocationType(v7, eGFXPlatformAllocation_DetailTexture);
          break;
        case 0x18:
          T3TextureBase::SetGFXAllocationType(v7, eGFXPlatformAllocation_AmbientOcclusionTexture);
          break;
        case 1:
        case 9:
        case 0xA:
        case 0x11:
        case 0x1F:
        case 0x20:
        case 0x21:
        case 0x22:
        case 0x24:
        case 0x25:
        case 0x27:
          T3TextureBase::SetGFXAllocationType(v7, eGFXPlatformAllocation_LightmapTexture);
          break;
        case 0x13:
          T3TextureBase::SetGFXAllocationType(v7, eGFXPlatformAllocation_ParticleTexture);
          break;
        default:
          v12 = GFXPlatform::TryGetContext();
          if ( v12 )
            GFXUtility::SetAllocationType(&v12->mMemoryStats, v7 + 9, eGFXPlatformAllocation_MiscTexture);
          break;
      }
      
	  v13 = pObja.mRegionCount;
      v14 = pObja.mRegionCount;
      
	  if ( pObja.mRegionCount >= *(v7 + 146) )
      {
        if ( pObja.mRegionCount > *(v7 + 146) )
        {
          v15 = *(v7 + 147);
          
		  if ( v15 < pObja.mRegionCount )
          {
            if ( !DCArray<KeyframedValue<Vector2>::Sample>::Resize(v7 + 14, pObja.mRegionCount - v15) )
              return 3;
            v13 = pObja.mRegionCount;
          }
          
		  v16 = v14 - *(v7 + 146);
          if ( v14 - *(v7 + 146) > 0 )
          {
            v17 = 0i64;
            do
            {
              v18 = 3 * (v17 + *(v7 + 146));
              v19 = *(v7 + 74);
              *(v19 + 8 * v18) = 0i64;
              *(v19 + 8 * v18 + 8) = 1i64;
              *(v19 + 8 * v18 + 16) = 0i64;
              ++v17;
            }
            while ( v17 < v16 );
            v13 = pObja.mRegionCount;
          }
          
		  *(v7 + 146) = v14;
        }
      }
      else
      {
        *(v7 + 146) = pObja.mRegionCount;
      }
      
	  v20 = 0;
      
	  if ( v13 > 0 )
      {
        v21 = 0i64;
        do
        {
          v22 = v21 + *(v7 + 74);
          PerformMetaSerializeAsync<T3Texture::RegionStreamHeader>(v4, (v21 + *(v7 + 74)));
          if ( !*(v22 + 8) )
            *(v22 + 8) = 1;
          if ( !*(v22 + 20) )
            *(v22 + 20) = *(v22 + 12);
          ++v20;
          v21 += 24i64;
        }
        while ( v20 < pObja.mRegionCount );
      }
      
	  if ( pObja.mAuxDataCount > 0 )
      {
        (*(*v4 + 184i64))(v4);
        v23 = 0;
        if ( pObja.mAuxDataCount > 0 )
        {
          do
          {
            v24 = operator new(0x28ui64);
            v25 = v24;
            v85 = v24;
            if ( v24 )
            {
              *v24 = 0i64;
              *(v24 + 1) = 0i64;
              Symbol::Symbol(v24 + 2);
              BinaryBuffer::BinaryBuffer((v25 + 24));
            }
            else
            {
              v25 = 0i64;
            }
            v26 = `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mFlags;
            if ( !_bittest(&v26, 0x1Du) )
            {
              for ( i = 0;
                    _InterlockedExchange(
                      &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mLock,
                      1) == 1;
                    ++i )
              {
                if ( i > 1000 )
                  Thread_Sleep(1);
              }
              if ( !(`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mFlags & 0x20000000) )
              {
                MetaClassDescription::Initialize(
                  &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                  &T3Texture::AuxiliaryData `RTTI Type Descriptor');
                `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mClassSize = 40;
                `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mpVTable = &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetVTable'::`2'::sVTable;
                qword_140FB6010 = MetaClassDescription_Typed<Symbol>::GetMetaClassDescription();
                `T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`4'::metaMemberDescriptionMemory = "mType";
                qword_140FB5FE8 = 16i64;
                qword_140FB5FF8 = &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory;
                `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mpFirstMember = &`T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`4'::metaMemberDescriptionMemory;
                qword_140FB6048 = MetaHelpers::GetMetaClassDescription<BinaryBuffer>(0x19);
                `T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`5'::metaMemberDescriptionMemory = "mData";
                qword_140FB6020 = 24i64;
                qword_140FB6030 = &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory;
                qword_140FB6000 = &`T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`5'::metaMemberDescriptionMemory;
                MetaClassDescription::Insert(&`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory);
              }
              `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mLock.mValue = 0;
            }
            v28 = MetaClassDescription::GetOperationSpecialization(
                    &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                    74);
            if ( v28 )
              (v28)(
                v25,
                &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                0i64,
                v4);
            else
              Meta::MetaOperation_SerializeAsync(
                v25,
                &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                0i64,
                v4);
            v29 = v84;
            v30 = v84[1].mUnorderedAccessViews.mContainerChangedCallbacks.mpLast;
            if ( v30 )
            {
              v30->mpNext = v25;
              v30 = v29[1].mUnorderedAccessViews.mContainerChangedCallbacks.mpLast;
            }
            *v25 = v30;
            *(v25 + 1) = 0i64;
            v29[1].mUnorderedAccessViews.mContainerChangedCallbacks.mpLast = v25;
            if ( !v29[1].mUnorderedAccessViews.vfptr )
              v29[1].mUnorderedAccessViews.vfptr = v25;
            ++LODWORD(v29[1].mShaderResourceViews.mpStorage);
            ++v23;
          }
          while ( v23 < pObja.mAuxDataCount );
          v7 = v29;
        }
        (*(*v4 + 192i64))(v4);
      }
      
	  v31 = (*(*v4 + 104i64))(v4);
      *(v7 + 86) = 0i64;
      
	  if ( pObja.mTotalDataSize > 0 )
      {
        LODWORD(v32) = (*(*v4 + 96i64))(v4, &v81, pObja.mTotalDataSize);
        v33 = *v32;
        if ( *v32 )
          PtrModifyRefCount(*v32, 1);
        v34 = *(v7 + 87);
        *(v7 + 87) = v33;
        if ( v34 )
          PtrModifyRefCount(v34, -1);
        v35 = v81;
        v81 = 0i64;
        if ( v35 )
          PtrModifyRefCount(v35, -1);
      }
      
	  if ( v31 )
        (*(*v4 + 112i64))(v4);
    }
    else
    {
      LODWORD(v36) = (*(*v4 + 160i64))(v4);
      v85 = v36;
      v37 = 0;
      *&v83.mRegionCount = 0i64;
      v83.mTotalDataSize = 0;
      TempBuffer::TempBuffer(&params.mLockFormat, 24 * v11, 4);
      v38 = v11;
      v39 = v11 == 0;
      v40 = v11 < 0;
      v41 = *&params.mLockFormat;
      if ( !v40 && !v39 )
      {
        v42 = *&params.mLockFormat + 8i64;
        do
        {
          *(v42 - 8) = 0i64;
          *v42 = 1i64;
          *(v42 + 8) = 0i64;
          v42 += 24i64;
          --v38;
        }
        while ( v38 );
      }
      PerformMetaSerializeAsync<T3Texture::StreamHeader>(v4, &v83);
      v43 = *(v7 + 24) - 1;
      if ( v43 >= 0 )
      {
        v81 = (24i64 * -v10);
        v44 = v41 + 24i64 * v10 * v43;
        v45 = (24i64 * -v10);
        do
        {
          if ( v10 > 0 )
          {
            v46 = v44;
            v47 = v10;
            do
            {
              v48 = MetaClassDescription_Typed<T3Texture::RegionStreamHeader>::GetMetaClassDescription();
              v49 = v48;
              v50 = MetaClassDescription::GetOperationSpecialization(v48, 74);
              if ( v50 )
                (v50)(v46, v49, 0i64, v4);
              else
                Meta::MetaOperation_SerializeAsync(v46, v49, 0i64, v4);
              v46 += 24i64;
              --v47;
            }
            while ( v47 );
            v45 = v81;
            v10 = v79;
          }
          v44 += v45;
          --v43;
        }
        while ( v43 >= 0 );
        v7 = v84;
      }
      (*(*v4 + 160i64))(v4);
      if ( *(v7 + 134) )
      {
        (*(*v4 + 184i64))(v4);
        v83.mAuxDataCount = *(v7 + 134);
        v51 = *(v7 + 68);
        if ( v51 )
        {
          do
          {
            v52 = `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mFlags;
            if ( !_bittest(&v52, 0x1Du) )
            {
              for ( j = 0;
                    _InterlockedExchange(
                      &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mLock,
                      1) == 1;
                    ++j )
              {
                if ( j > 1000 )
                  Thread_Sleep(1);
              }
              if ( !(`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mFlags & 0x20000000) )
              {
                MetaClassDescription::Initialize(
                  &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                  &T3Texture::AuxiliaryData `RTTI Type Descriptor');
                `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mClassSize = 40;
                `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mpVTable = &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetVTable'::`2'::sVTable;
                qword_140FB6010 = MetaClassDescription_Typed<Symbol>::GetMetaClassDescription();
                `T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`4'::metaMemberDescriptionMemory = "mType";
                qword_140FB5FE8 = 16i64;
                qword_140FB5FF8 = &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory;
                `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mpFirstMember = &`T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`4'::metaMemberDescriptionMemory;
                qword_140FB6048 = MetaHelpers::GetMetaClassDescription<BinaryBuffer>(0x19);
                `T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`5'::metaMemberDescriptionMemory = "mData";
                qword_140FB6020 = 24i64;
                qword_140FB6030 = &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory;
                qword_140FB6000 = &`T3Texture::AuxiliaryData::InternalGetMetaClassDescription'::`5'::metaMemberDescriptionMemory;
                MetaClassDescription::Insert(&`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory);
              }
              `MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory.mLock.mValue = 0;
            }
            v54 = MetaClassDescription::GetOperationSpecialization(
                    &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                    74);
            if ( v54 )
              (v54)(
                v51,
                &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                0i64,
                v4);
            else
              Meta::MetaOperation_SerializeAsync(
                v51,
                &`MetaClassDescription_Typed<T3Texture::AuxiliaryData>::GetMetaClassDescription'::`2'::metaClassDescriptionMemory,
                0i64,
                v4);
            v51 = *(v51 + 8);
          }
          while ( v51 );
          v7 = v84;
        }
        (*(*v4 + 192i64))(v4);
      }
      (*(*v4 + 104i64))(v4);
      v55 = *(v7 + 24) - 1;
      v82 = v55;
      v56 = v79;
      if ( v55 >= 0 )
      {
        *&v83.mTotalDataSize = 24i64 * -v79;
        v57 = (*&params.mLockFormat + 24i64 * v79 * v55 + 16);
        v84 = (*&params.mLockFormat + 24i64 * v79 * v55 + 16);
        v58 = 24i64 * -v79;
        do
        {
          v59 = v37;
          LODWORD(v81) = v37;
          if ( v56 > 0 )
          {
            v60 = v57;
            *&v83.mRegionCount = v57;
            do
            {
              params.mpTempAllocator = 0i64;
              params.mLockFormat = -1;
              *&params.mbRead = 1;
              params.mFace = v59;
              params.mMipLevel = v55;
              _mm_store_si128(&context, 0i64);
              _mm_store_si128(&context.mPitch, _mm_load_si128(&_xmm_ffffffff000000000000000000000000));
              _mm_store_si128(&context.mMipLevel, _mm_load_si128(&_xmm));
              context.mHeight = 0;
              *&context.mDepth = 1i64;
              *&context.mbRead = 0;
              context.mbTexToTexCopy = 0;
              context.mpPlatformData = 0i64;
              v61 = T3Texture::Lock(v7, &context, &params);
              *&pObja.mRegionCount = v61;
              v62 = (context.mWidth * context.mBitsPerBlock + 7) / 8;
              LODWORD(v60[-1].mDepthStencilViews.mpStorage) = v59;
              HIDWORD(v60[-1].mDepthStencilViews.mpStorage) = v55;
              v60[-1].mD3DBindFlags = 1;
              v63 = (v62 + 3) & 0xFFFFFFFC;
              LODWORD(v60->vfptr) = v63;
              v64 = context.mHeight * v63;
              HIDWORD(v60->vfptr) = v64;
              v60[-1].mFastMemHeap = v64 * context.mDepth;
              ++v83.mRegionCount;
              v83.mTotalDataSize += v60[-1].mFastMemHeap;
              if ( context.mPitch
                && (LODWORD(v60->vfptr) != context.mPitch || HIDWORD(v60->vfptr) != context.mSlicePitch) )
              {
                v65 = LODWORD(v60->vfptr) - v62;
                v66 = 0i64;
                v85 = 0i64;
                params.mpTempAllocator = 0;
                if ( v65 > 0 )
                {
                  HIDWORD(params.mpTempAllocator) = Memory::GetTempBufferMarker();
                  v66 = Memory::AllocTempBuffer(v65, 16);
                  v85 = v66;
                  LODWORD(params.mpTempAllocator) = v65;
                  if ( !v66 )
                  {
                    v88.m128i_i32[0] = 0;
                    v88.m128i_i64[1] = 16i64;
                    _mm_store_si128(&v90, v88);
                    v66 = operator new[](v65, &v90);
                    v85 = v66;
                    HIDWORD(params.mpTempAllocator) = -1;
                  }
                }
                memset(v66, 0, v65);
                v67 = 0;
                v68 = context.mDepth;
                if ( context.mDepth > 0 )
                {
                  v69 = context.mHeight;
                  do
                  {
                    v70 = v37;
                    if ( v69 > 0 )
                    {
                      do
                      {
                        (*(*v4 + 408i64))(
                          v4,
                          *&pObja.mRegionCount + context.mSlicePitch * v67 + context.mPitch * v70,
                          v62);
                        (*(*v4 + 408i64))(v4, v66, v65);
                        ++v70;
                        v69 = context.mHeight;
                      }
                      while ( v70 < context.mHeight );
                      v68 = context.mDepth;
                      v37 = 0;
                    }
                    ++v67;
                  }
                  while ( v67 < v68 );
                }
                if ( v66 )
                {
                  if ( SHIDWORD(params.mpTempAllocator) < 0 )
                  {
                    operator delete[](v66);
                  }
                  else
                  {
                    Memory::SetTempBufferMarker(SHIDWORD(params.mpTempAllocator));
                    HIDWORD(params.mpTempAllocator) = -1;
                  }
                  v85 = 0i64;
                  LODWORD(params.mpTempAllocator) = 0;
                }
                v60 = *&v83.mRegionCount;
                v59 = v81;
                v56 = v79;
              }
              else
              {
                (*(*v4 + 408i64))(v4, v61, v60[-1].mFastMemHeap);
              }
              v7 = v84;
              if ( LOBYTE(v84[1].mNext) )
              {
                T3Texture_DX11::InternalUnlock(v84, &context);
                *(v7 + 352) = 0;
              }
              LODWORD(v81) = ++v59;
              v60 = (v60 + 24);
              *&v83.mRegionCount = v60;
              v55 = v82;
            }
            while ( v59 < v56 );
            v57 = v84;
            v58 = *&v83.mTotalDataSize;
          }
          v82 = --v55;
          v57 = (v57 + v58);
          v84 = v57;
        }
        while ( v55 >= 0 );
      }
      (*(*v4 + 112i64))(v4);
      LODWORD(v71) = (*(*v4 + 160i64))(v4);
      *&pObja.mRegionCount = v71;
      (*(*v4 + 168i64))(v4, v85);
      PerformMetaSerializeAsync<T3Texture::StreamHeader>(v4, &v83);
      v72 = *(v7 + 24) - 1;
      if ( v72 >= 0 )
      {
        v73 = 24i64 * -v56;
        v74 = *&params.mLockFormat + 24i64 * v56 * v72;
        do
        {
          if ( v56 > 0 )
          {
            v75 = v74;
            do
            {
              v76 = MetaClassDescription_Typed<T3Texture::RegionStreamHeader>::GetMetaClassDescription();
              v77 = v76;
              v78 = MetaClassDescription::GetOperationSpecialization(v76, 74);
              if ( v78 )
                (v78)(v75, v77, 0i64, v4);
              else
                Meta::MetaOperation_SerializeAsync(v75, v77, 0i64, v4);
              v75 += 24i64;
              --v56;
            }
            while ( v56 );
            v56 = v79;
          }
          v74 += v73;
          --v72;
        }
        while ( v72 >= 0 );
      }
      (*(*v4 + 168i64))(v4, *&pObja.mRegionCount);
      if ( *&params.mLockFormat )
      {
        if ( *&params.mbRead < 0 )
          operator delete[](*&params.mLockFormat);
        else
          Memory::SetTempBufferMarker(*&params.mbRead);
      }
    }
    
	result = 1;
  }
  return result;
}